{{extend 'layout_loggedin.html'}}
<br>
<div class="container-fluid">
    <h2 align="center">WELCOME TO THE DASHBOARD</h2>
<div align="center" id="timerContainer">
<div  class="timer" onclick="startTimer()">Start Timer!</div> <div class="start"> </div> <div class="end"> </div>
<button class="startTimer reset btn btn-primary" onclick="startTimer()" >
    <i>Start</i>
  </button>
<button class="pauseTimer reset btn btn-primary" onclick="pauseTimer()" >
    <i>Stop</i>
  </button>
<button class="resetTimer reset btn btn-primary" onclick="resetTimer()"><i>Reset</i></button>
</div>

<div class="container-fluid">
    <h3>
        Enter your task
    </h3>
    {{=tasks_form}}
</div>
<div class="container-fluid">
    <h3>
        Your Tasks so far:
    </h3>
    <table class='table table-striped table-hover'>
        <tr>
            <th>Task Name</th>
            <th>Description</th>
            <th>Due Date</th>
            <th>Estimate</th>
            <th>Start Time</th>
            <th>End Time</th>
            <th>Add Tag</th>
        </tr>
        {{ for row in my_tasks: }}
        <tr>
            <td>{{=row.task_name}}</td>
            <td>{{=row.task_description}}</td>
            <td>{{=row.due_date}}</td>
            <td>{{=row.estimate}}</td>
            <td>{{=row.start_time}}</td>
            <td>{{=row.end_time}}</td>
            <td>
                <form enctype="multipart/form-data" action="#" method="post" class="form-inline">
                    <select class="generic-widgit form-control" name="tag" >
                        <option selected>Select a Tag</option>
                        {{for tag in tags:}}
                        <option value="{{=tag.id}}">{{=tag.tag_name}}</option>
                        {{pass}}
                    </select>
                    <input class="btn btn-primary" type="submit" value="Submit" />
                    <div style="display:none;">
                        <input type="hidden" value="{{=row.id}}" name="task" />
                        {{=form.hidden_fields()}}
                    </div>
                </form>
            </td>
        </tr>
        {{pass}}
    </table>
</div>


<script>

var startTimerButton = document.querySelector('.startTimer');
var pauseTimerButton = document.querySelector('.pauseTimer');
var timerDisplay = document.querySelector('.timer');
var startDisplay = document.querySelector('.start');
var endDisplay = document.querySelector('.end');
var startTime;
var updatedTime;
var difference;
var tInterval;
var savedTime;
var paused = 0;
var running = 0;
var d = new Date();
timerDisplay.style.fontSize = "32px";
timerDisplay.style.color = "green";
timerDisplay.style.background = "#FFFFFF";
    
function startTimer(){
  if(!running){
    if (!paused) {
    startTime = new Date().getTime();
    var d = new Date();
    var h = (d.getHours() < 10) ? "0" + d.getHours() : d.getHours();
    var m = (d.getMinutes() < 10) ? "0" + d.getMinutes() : d.getMinutes();
    var s = (d.getSeconds() < 10) ? "0" + d.getSeconds() : d.getSeconds();
    startDisplay.innerHTML = "Start Time: " + h + ":" + m + ":" + s + "\n";
    endDisplay.innerHTML = "End Time: ";
    tInterval = setInterval(getShowTime, 1);
// change 1 to 1000 above to run script every second instead of every millisecond. one other change will be needed in the getShowTime() function below for this to work. see comment there.   
    paused = 0;
    running = 1;
    }
  }
}
    
function pauseTimer(){
  if (!difference){
    // if timer never started, don't allow pause button to do anything
  } else if (!paused) {
    d = new Date();
    h = (d.getHours() < 10) ? "0" + d.getHours() : d.getHours();
    m = (d.getMinutes() < 10) ? "0" + d.getMinutes() : d.getMinutes();
    s = (d.getSeconds() < 10) ? "0" + d.getSeconds() : d.getSeconds();
    endDisplay.innerHTML = "End Time: " + h + ":" + m + ":" + s + "\n";
    clearInterval(tInterval);
    savedTime = difference;
    paused = 1;
    running = 0;
  }
}
function resetTimer(){
  if (paused){
  clearInterval(tInterval);
  savedTime = 0;
  difference = 0;
  paused = 0;
  running = 0;
  timerDisplay.innerHTML = 'Start Timer!';
  }
}
    
function getShowTime(){
  updatedTime = new Date().getTime();
  if (savedTime){
    difference = (updatedTime - startTime) + savedTime;
  } else {
    difference =  updatedTime - startTime;
  }
  var hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  var minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
  var seconds = Math.floor((difference % (1000 * 60)) / 1000);
  hours = (hours < 10) ? "0" + hours : hours;
  minutes = (minutes < 10) ? "0" + minutes : minutes;
  seconds = (seconds < 10) ? "0" + seconds : seconds;
  timerDisplay.innerHTML = hours + ':' + minutes + ':' + seconds;
}
     
</script>
